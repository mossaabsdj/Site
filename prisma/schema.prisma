generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id         Int         @id @default(autoincrement())
  title      String      @default("")
  desc       String      @default("")
  prix       Float       @default(0)
  emballage  String      @default("")
  farmId     Int?        // Optional if some products are not linked to a farm
  farm       Farm?       @relation(fields: [farmId], references: [id])
  image      String      @default("") // âœ… New field for the image path or URL

  commandes  Commande[]  // ðŸ‘ˆ relation
  Date  DateTime    @default(now())
}
model Commande {
  id         Int      @id @default(autoincrement())
  

  emballage  String
  nom        String
  prenom     String
  region     String
  adresse    String
  mail       String
  num        String
  product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  // New relations
  bungalowId   Int?      // Optional, if the order is from a bungalow
  bungalow     Bungalow? @relation(fields: [bungalowId], references: [id])

  restaurantId Int?        // Optional, if the order is from a restaurant
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])

  Date  DateTime @default(now())
}

model Farm {
  id          Int           @id @default(autoincrement())
  name        String
  createdAt   DateTime      @default(now())

  Product Product[]

  Bungalow Bungalow[]

  Restaurant Restaurant[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  User     String @unique
  Password String

}
model Bungalow {
  id        Int         @id @default(autoincrement())
  name      String
  location  String
  farmId    Int
  image      String      @default("") // âœ… New field for the image path or URL
  farm      Farm        @relation(fields: [farmId], references: [id])
  commandes Commande[]  // relation to orders
}

model Restaurant {
  id        Int         @id @default(autoincrement())
  name      String
  address   String
  farmId    Int
  image      String      @default("") // âœ… New field for the image path or URL
  farm      Farm        @relation(fields: [farmId], references: [id])
  commandes Commande[]  // relation to orders
}
